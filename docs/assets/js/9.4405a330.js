(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{354:function(a,s,e){"use strict";e.r(s);var t=e(43),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"fundamentos-de-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fundamentos-de-git"}},[a._v("#")]),a._v(" Fundamentos de GIT")]),a._v(" "),e("p",[a._v("En este apartado podrás comenzar a trabajar con git.")]),a._v(" "),e("h2",{attrs:{id:"comandos-basicos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comandos-basicos"}},[a._v("#")]),a._v(" Comandos básicos")]),a._v(" "),e("p",[a._v("Aprendamos los primeros comandos con git")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Conocer la versión de git instalada")]),a._v("\ngit version\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ayuda sobre los comandos")]),a._v("\ngit help\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Iniciar un nuevo repositorio")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear la carpeta oculta .git")]),a._v("\ngit init\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ver que archivos no han sido registrados")]),a._v("\ngit status\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Agregar todos los archivos para que esté pendiente de los cambios")]),a._v("\ngit add "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear commit (fotografía del proyecto en ese momento)")]),a._v("\ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"primer commit"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra la lista de commit del mas reciente al más antigüo")]),a._v("\ngit log\n")])])]),e("p",[a._v("En resumidas cuentas nosotros realizamos cambios en nuestros archivos, el comando "),e("code",[a._v("status")]),a._v(" verificará que archivos han sidos modificados.\nCuando deseemos registrar esos cambios tendremos que agregarlos con "),e("code",[a._v("add .")]),a._v(" así ya estará listo para poder hacer un commit.\nEl "),e("code",[a._v("commit")]),a._v(" realiza la copia de ese instante para poder volver en el tiempo si es que es necesario.")]),a._v(" "),e("h2",{attrs:{id:"trucos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trucos"}},[a._v("#")]),a._v(" Trucos")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra en una línea los commit realizados")]),a._v("\ngit log "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("oneline\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra en una línea los commit realizados pero más elegante")]),a._v("\ngit log "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("oneline "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("decorate "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("all "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("graph\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Solo muestra los archivos modificados")]),a._v("\ngit status "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("s\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("Diferencias entre -- y -")]),a._v(" "),e("p",[e("code",[a._v("--decorate")]),a._v(" hace referencia a una palabra "),e("br"),a._v(" "),e("code",[a._v("-s")]),a._v(" hace referencia al comando o a varios comandos, "),e("code",[a._v("-sa")]),a._v(" serían dos comandos diferentes")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Vemos información de la rama maestra")]),a._v("\ngit status "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b\ngit status "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("sb "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Hace lo mismo que el comando anterior")]),a._v("\n")])])]),e("h2",{attrs:{id:"creando-alias-globales"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creando-alias-globales"}},[a._v("#")]),a._v(" Creando alias globales")]),a._v(" "),e("p",[a._v("Los alias nos sirven para crear atajos de comandos, podemos guardar diferentes alias de forma global y quedarán guardados en la configuración de git.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// Guardamos el alias "lg" que ejecutará todo lo que está entre comillas')]),a._v("\ngit config "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global alias"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lg "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"log --oneline --decorate --all --graph"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Para ver el archivo config con los alias creados")]),a._v("\ngit config "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("e\n")])])]),e("p",[e("strong",[a._v("Vim")]),a._v(" es el editor de código en la línea de comandos")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v('Salir del modo edición "Vim"')]),a._v(" "),e("p",[a._v("Para salir del modo edición de la líneas de comando precionar "),e("code",[a._v(":q")]),a._v(", en caso de realizar algún cambio sin guardar escribir "),e("code",[a._v(":qa")]),a._v(" "),e("br"),a._v(" "),e("code",[a._v(":q!")]),a._v(" también sirve para salir sin guardar")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Modo lectura sin poder modificar")]),a._v("\ngit config "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("l\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Realiza el add . y commit más mensaje al mismo tiempo")]),a._v("\ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("am "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"más comandos agregados"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Para editar un commit, como por ej: el mensaje")]),a._v("\ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("Trucos de editor Vim")]),a._v(" "),e("p",[e("code",[a._v("i")]),a._v(" para comenzar a editar "),e("br"),a._v(" "),e("code",[a._v("esc")]),a._v(" para salir del modo edición "),e("br"),a._v(" "),e("code",[a._v("wq")]),a._v(" para guardar y salir "),e("br"),a._v(" "),e("code",[a._v("q!")]),a._v(" salir sin guardar cambios")])]),a._v(" "),e("h2",{attrs:{id:"viajes-a-traves-de-los-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#viajes-a-traves-de-los-commit"}},[a._v("#")]),a._v(" Viajes a través de los commit")]),a._v(" "),e("p",[a._v("Vamos a conocer como podemos movernos entre los diferentes commit que tengamos registrados, supongamos que tenemos los siguientes commit:")]),a._v(" "),e("ul",[e("li",[a._v("f82f457 (HEAD -> master) mas comandos agregados")]),a._v(" "),e("li",[a._v("f52f3da nuevos comandos en fundamentos.md")]),a._v(" "),e("li",[a._v("e4ab8af mi primer commit")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da")]),a._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("mixed f52f3da\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da y eliminamos los cambios futuros")]),a._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard f52f3da\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra todos los cambios incluso si borramos los commit")]),a._v("\ngit reflog\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da y podemos restaurar los archivos")]),a._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard f52f3da\n")])])]),e("p",[a._v("Si no hicimos un commit pero aún así queremos revertir los cambios en un archivo específico podríamos utilizar el siguiente comando:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout -- nombreArchivo.conExtensión\n")])])]),e("p",[a._v("Si deseamos destruir todos los cambios sin haber realizado un commit podemos utilizar:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git reset --hard\n")])])]),e("p",[a._v("Para mayor información visite: "),e("a",{attrs:{href:"https://git-scm.com/book/es/v2/Herramientas-de-Git-Reiniciar-Desmitificado",target:"_blank",rel:"noopener noreferrer"}},[a._v("Click aquí"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"renombrar-archivos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#renombrar-archivos"}},[a._v("#")]),a._v(" Renombrar archivos")]),a._v(" "),e("p",[a._v("Puede que queramos renombrar un archivo, es recomendable hacerlo directamente en la línea de comandos para registrar los cambios con git.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Cambiar nombre")]),a._v("\ngit mv nombreOriginal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue nombreNuevo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue\n")])])]),e("p",[a._v("Recuerden hacer el commit para registrar los cambios en git.")]),a._v(" "),e("h2",{attrs:{id:"eliminar-archivos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eliminar-archivos"}},[a._v("#")]),a._v(" Eliminar archivos")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Cambiar nombre")]),a._v("\ngit rm nombreArchivo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue\n")])])]),e("p",[a._v("También recordar hacer el commit para salgar cambios en git.")]),a._v(" "),e("h2",{attrs:{id:"ignorando-archivos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignorando-archivos"}},[a._v("#")]),a._v(" Ignorando Archivos")]),a._v(" "),e("p",[a._v("Para no hacer seguimiento de carpetas o archivos, debemos crear el siguiente archivo:")]),a._v(" "),e("ul",[e("li",[a._v(".gitignore\n"),e("br"),a._v("\nSu estructura de ejemplo sería así:")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("arhivo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ignora el archivo en cuestion")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ignora todos los arhivos con extensión .js")]),a._v("\nnode_modules"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Ignora toda la carpeta")]),a._v("\n")])])]),e("h2",{attrs:{id:"ramas-o-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ramas-o-branch"}},[a._v("#")]),a._v(" Ramas o branch")]),a._v(" "),e("p",[a._v('Hasta el momento solo hemos trabajado en la rama "master" pero puede que necesitemos crear diferentes ramas para los seguimientos de git.')]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crea una nueva rama")]),a._v("\ngit branch nombreRama\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos muestra en que rama estamos")]),a._v("\ngit branch\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos movemos a la nueva rama")]),a._v("\ngit checkout nombreRama\n")])])]),e("p",[a._v("Podemos unir la rama master con la nueva, para eso tenemos que estar en la master para ejecutar el siguiente comando:")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos movemos a la nueva rama")]),a._v("\ngit merge nombreRama\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Eliminar una rama")]),a._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d nombreRama\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("Atajos")]),a._v(" "),e("p",[a._v("Podemos utilizar "),e("code",[a._v("git checkout -b nuevaRama")]),a._v(" para crear la nuevaRama y viajar a ella.")])]),a._v(" "),e("h2",{attrs:{id:"tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[a._v("#")]),a._v(" Tags")]),a._v(" "),e("p",[a._v("Con los tags podemos hacer versiones de nuestro proyecto.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear un tags")]),a._v("\ngit tag versionAlpha "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"versión alpha"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Listar tags")]),a._v("\ngit tag\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Borrar tags")]),a._v("\ngit tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d nombreTags\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Hacer una versión en un commit anterior ej: f52f3da")]),a._v("\ngit tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("a nombreTag f52f3da "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"version alpha"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Mostrar información del tag")]),a._v("\ngit show nombreTag\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);